{
  "version": 3,
  "sources": ["../../../src/types/common.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Infer } from 'superstruct';\nimport { boolean, define, literal, nullable, object, record, string, union } from 'superstruct';\n\nimport type { CallArg } from '../bcs/index.js';\n\nexport const ObjectOwner = union([\n\tobject({\n\t\tAddressOwner: string(),\n\t}),\n\tobject({\n\t\tObjectOwner: string(),\n\t}),\n\tobject({\n\t\tShared: object({\n\t\t\tinitial_shared_version: nullable(string()),\n\t\t}),\n\t}),\n\tliteral('Immutable'),\n]);\nexport type ObjectOwner = Infer<typeof ObjectOwner>;\n\nexport type SuiJsonValue = boolean | number | string | CallArg | Array<SuiJsonValue>;\nexport const SuiJsonValue = define<SuiJsonValue>('SuiJsonValue', () => true);\n\nconst ProtocolConfigValue = union([\n\tobject({ u32: string() }),\n\tobject({ u64: string() }),\n\tobject({ f64: string() }),\n]);\ntype ProtocolConfigValue = Infer<typeof ProtocolConfigValue>;\n\nexport const ProtocolConfig = object({\n\tattributes: record(string(), nullable(ProtocolConfigValue)),\n\tfeatureFlags: record(string(), boolean()),\n\tmaxSupportedProtocolVersion: string(),\n\tminSupportedProtocolVersion: string(),\n\tprotocolVersion: string(),\n});\nexport type ProtocolConfig = Infer<typeof ProtocolConfig>;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,yBAAkF;AAI3E,MAAM,kBAAc,0BAAM;AAAA,MAChC,2BAAO;AAAA,IACN,kBAAc,2BAAO;AAAA,EACtB,CAAC;AAAA,MACD,2BAAO;AAAA,IACN,iBAAa,2BAAO;AAAA,EACrB,CAAC;AAAA,MACD,2BAAO;AAAA,IACN,YAAQ,2BAAO;AAAA,MACd,4BAAwB,iCAAS,2BAAO,CAAC;AAAA,IAC1C,CAAC;AAAA,EACF,CAAC;AAAA,MACD,4BAAQ,WAAW;AACpB,CAAC;AAIM,MAAM,mBAAe,2BAAqB,gBAAgB,MAAM,IAAI;AAE3E,MAAM,0BAAsB,0BAAM;AAAA,MACjC,2BAAO,EAAE,SAAK,2BAAO,EAAE,CAAC;AAAA,MACxB,2BAAO,EAAE,SAAK,2BAAO,EAAE,CAAC;AAAA,MACxB,2BAAO,EAAE,SAAK,2BAAO,EAAE,CAAC;AACzB,CAAC;AAGM,MAAM,qBAAiB,2BAAO;AAAA,EACpC,gBAAY,+BAAO,2BAAO,OAAG,6BAAS,mBAAmB,CAAC;AAAA,EAC1D,kBAAc,+BAAO,2BAAO,OAAG,4BAAQ,CAAC;AAAA,EACxC,iCAA6B,2BAAO;AAAA,EACpC,iCAA6B,2BAAO;AAAA,EACpC,qBAAiB,2BAAO;AACzB,CAAC;",
  "names": []
}
