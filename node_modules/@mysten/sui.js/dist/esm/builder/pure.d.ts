import type { SerializedBcs } from '@mysten/bcs';
import type { TransactionBlockInput } from './Transactions.js';
export declare function createPure(makePure: (value: unknown, type?: string | undefined) => TransactionBlockInput): {
    (value: SerializedBcs<any, any> | Uint8Array): TransactionBlockInput;
    (value: unknown, type?: string): TransactionBlockInput;
    u8(value: number): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    u16(value: number): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    u32(value: number): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    u64(value: bigint | number | string): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    u128(value: bigint | number | string): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    u256(value: bigint | number | string): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    bool(value: boolean): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    string(value: string): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    address(value: string): {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
    id: (value: string) => {
        index: number;
        kind: "Input";
        type?: "object" | undefined;
        value?: any;
    } | {
        type: "pure";
        index: number;
        kind: "Input";
        value?: any;
    };
};
