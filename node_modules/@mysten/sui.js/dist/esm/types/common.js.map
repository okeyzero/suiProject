{
  "version": 3,
  "sources": ["../../../src/types/common.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Infer } from 'superstruct';\nimport { boolean, define, literal, nullable, object, record, string, union } from 'superstruct';\n\nimport type { CallArg } from '../bcs/index.js';\n\nexport const ObjectOwner = union([\n\tobject({\n\t\tAddressOwner: string(),\n\t}),\n\tobject({\n\t\tObjectOwner: string(),\n\t}),\n\tobject({\n\t\tShared: object({\n\t\t\tinitial_shared_version: nullable(string()),\n\t\t}),\n\t}),\n\tliteral('Immutable'),\n]);\nexport type ObjectOwner = Infer<typeof ObjectOwner>;\n\nexport type SuiJsonValue = boolean | number | string | CallArg | Array<SuiJsonValue>;\nexport const SuiJsonValue = define<SuiJsonValue>('SuiJsonValue', () => true);\n\nconst ProtocolConfigValue = union([\n\tobject({ u32: string() }),\n\tobject({ u64: string() }),\n\tobject({ f64: string() }),\n]);\ntype ProtocolConfigValue = Infer<typeof ProtocolConfigValue>;\n\nexport const ProtocolConfig = object({\n\tattributes: record(string(), nullable(ProtocolConfigValue)),\n\tfeatureFlags: record(string(), boolean()),\n\tmaxSupportedProtocolVersion: string(),\n\tminSupportedProtocolVersion: string(),\n\tprotocolVersion: string(),\n});\nexport type ProtocolConfig = Infer<typeof ProtocolConfig>;\n"],
  "mappings": "AAIA,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,QAAQ,QAAQ,aAAa;AAI3E,MAAM,cAAc,MAAM;AAAA,EAChC,OAAO;AAAA,IACN,cAAc,OAAO;AAAA,EACtB,CAAC;AAAA,EACD,OAAO;AAAA,IACN,aAAa,OAAO;AAAA,EACrB,CAAC;AAAA,EACD,OAAO;AAAA,IACN,QAAQ,OAAO;AAAA,MACd,wBAAwB,SAAS,OAAO,CAAC;AAAA,IAC1C,CAAC;AAAA,EACF,CAAC;AAAA,EACD,QAAQ,WAAW;AACpB,CAAC;AAIM,MAAM,eAAe,OAAqB,gBAAgB,MAAM,IAAI;AAE3E,MAAM,sBAAsB,MAAM;AAAA,EACjC,OAAO,EAAE,KAAK,OAAO,EAAE,CAAC;AAAA,EACxB,OAAO,EAAE,KAAK,OAAO,EAAE,CAAC;AAAA,EACxB,OAAO,EAAE,KAAK,OAAO,EAAE,CAAC;AACzB,CAAC;AAGM,MAAM,iBAAiB,OAAO;AAAA,EACpC,YAAY,OAAO,OAAO,GAAG,SAAS,mBAAmB,CAAC;AAAA,EAC1D,cAAc,OAAO,OAAO,GAAG,QAAQ,CAAC;AAAA,EACxC,6BAA6B,OAAO;AAAA,EACpC,6BAA6B,OAAO;AAAA,EACpC,iBAAiB,OAAO;AACzB,CAAC;",
  "names": []
}
