{
  "version": 3,
  "sources": ["../../../src/types/objects.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { Infer } from 'superstruct';\nimport {\n\tany,\n\tarray,\n\tassign,\n\tbigint,\n\tboolean,\n\tis,\n\tliteral,\n\tnullable,\n\tnumber,\n\tobject,\n\toptional,\n\trecord,\n\tstring,\n\ttuple,\n\tunion,\n\tunknown,\n} from 'superstruct';\n\nimport { ObjectOwner } from './common.js';\n\nexport const ObjectType = union([string(), literal('package')]);\nexport type ObjectType = Infer<typeof ObjectType>;\n\nexport const SuiObjectRef = object({\n\t/** Base64 string representing the object digest */\n\tdigest: string(),\n\t/** Hex code as string representing the object id */\n\tobjectId: string(),\n\t/** Object version */\n\tversion: union([number(), string(), bigint()]),\n});\nexport type SuiObjectRef = Infer<typeof SuiObjectRef>;\n\nexport const OwnedObjectRef = object({\n\towner: ObjectOwner,\n\treference: SuiObjectRef,\n});\nexport type OwnedObjectRef = Infer<typeof OwnedObjectRef>;\nexport const TransactionEffectsModifiedAtVersions = object({\n\tobjectId: string(),\n\tsequenceNumber: string(),\n});\n\nexport const SuiGasData = object({\n\tpayment: array(SuiObjectRef),\n\t/** Gas Object's owner */\n\towner: string(),\n\tprice: string(),\n\tbudget: string(),\n});\nexport type SuiGasData = Infer<typeof SuiGasData>;\n\nexport const SuiObjectInfo = assign(\n\tSuiObjectRef,\n\tobject({\n\t\ttype: string(),\n\t\towner: ObjectOwner,\n\t\tpreviousTransaction: string(),\n\t}),\n);\nexport type SuiObjectInfo = Infer<typeof SuiObjectInfo>;\n\nexport const ObjectContentFields = record(string(), any());\nexport type ObjectContentFields = Infer<typeof ObjectContentFields>;\n\nexport const MovePackageContent = record(string(), unknown());\nexport type MovePackageContent = Infer<typeof MovePackageContent>;\n\nexport const SuiMoveObject = object({\n\t/** Move type (e.g., \"0x2::coin::Coin<0x2::sui::SUI>\") */\n\ttype: string(),\n\t/** Fields and values stored inside the Move object */\n\tfields: ObjectContentFields,\n\thasPublicTransfer: boolean(),\n});\nexport type SuiMoveObject = Infer<typeof SuiMoveObject>;\n\nexport const SuiMovePackage = object({\n\t/** A mapping from module name to disassembled Move bytecode */\n\tdisassembled: MovePackageContent,\n});\nexport type SuiMovePackage = Infer<typeof SuiMovePackage>;\n\nexport const SuiParsedData = union([\n\tassign(SuiMoveObject, object({ dataType: literal('moveObject') })),\n\tassign(SuiMovePackage, object({ dataType: literal('package') })),\n]);\nexport type SuiParsedData = Infer<typeof SuiParsedData>;\n\nexport const SuiRawMoveObject = object({\n\t/** Move type (e.g., \"0x2::coin::Coin<0x2::sui::SUI>\") */\n\ttype: string(),\n\thasPublicTransfer: boolean(),\n\tversion: string(),\n\tbcsBytes: string(),\n});\nexport type SuiRawMoveObject = Infer<typeof SuiRawMoveObject>;\n\nexport const SuiRawMovePackage = object({\n\tid: string(),\n\t/** A mapping from module name to Move bytecode enocded in base64*/\n\tmoduleMap: record(string(), string()),\n});\nexport type SuiRawMovePackage = Infer<typeof SuiRawMovePackage>;\n\n// TODO(chris): consolidate SuiRawParsedData and SuiRawObject using generics\nexport const SuiRawData = union([\n\tassign(SuiRawMoveObject, object({ dataType: literal('moveObject') })),\n\tassign(SuiRawMovePackage, object({ dataType: literal('package') })),\n]);\nexport type SuiRawData = Infer<typeof SuiRawData>;\n\nexport const SUI_DECIMALS = 9;\n\nexport const MIST_PER_SUI = BigInt(1000000000);\n\nexport const SuiObjectResponseError = object({\n\tcode: string(),\n\terror: optional(string()),\n\tobject_id: optional(string()),\n\tparent_object_id: optional(string()),\n\tversion: optional(string()),\n\tdigest: optional(string()),\n});\nexport type SuiObjectResponseError = Infer<typeof SuiObjectResponseError>;\nexport const DisplayFieldsResponse = object({\n\tdata: nullable(optional(record(string(), string()))),\n\terror: nullable(optional(SuiObjectResponseError)),\n});\nexport type DisplayFieldsResponse = Infer<typeof DisplayFieldsResponse>;\n// TODO: remove after all envs support the new DisplayFieldsResponse;\nexport const DisplayFieldsBackwardCompatibleResponse = union([\n\tDisplayFieldsResponse,\n\toptional(record(string(), string())),\n]);\nexport type DisplayFieldsBackwardCompatibleResponse = Infer<\n\ttypeof DisplayFieldsBackwardCompatibleResponse\n>;\n\nexport const SuiObjectData = object({\n\tobjectId: string(),\n\tversion: string(),\n\tdigest: string(),\n\t/**\n\t * Type of the object, default to be undefined unless SuiObjectDataOptions.showType is set to true\n\t */\n\ttype: nullable(optional(string())),\n\t/**\n\t * Move object content or package content, default to be undefined unless SuiObjectDataOptions.showContent is set to true\n\t */\n\tcontent: nullable(optional(SuiParsedData)),\n\t/**\n\t * Move object content or package content in BCS bytes, default to be undefined unless SuiObjectDataOptions.showBcs is set to true\n\t */\n\tbcs: nullable(optional(SuiRawData)),\n\t/**\n\t * The owner of this object. Default to be undefined unless SuiObjectDataOptions.showOwner is set to true\n\t */\n\towner: nullable(optional(ObjectOwner)),\n\t/**\n\t * The digest of the transaction that created or last mutated this object.\n\t * Default to be undefined unless SuiObjectDataOptions.showPreviousTransaction is set to true\n\t */\n\tpreviousTransaction: nullable(optional(string())),\n\t/**\n\t * The amount of SUI we would rebate if this object gets deleted.\n\t * This number is re-calculated each time the object is mutated based on\n\t * the present storage gas price.\n\t * Default to be undefined unless SuiObjectDataOptions.showStorageRebate is set to true\n\t */\n\tstorageRebate: nullable(optional(string())),\n\t/**\n\t * Display metadata for this object, default to be undefined unless SuiObjectDataOptions.showDisplay is set to true\n\t * This can also be None if the struct type does not have Display defined\n\t * See more details in https://forums.sui.io/t/nft-object-display-proposal/4872\n\t */\n\tdisplay: nullable(optional(DisplayFieldsBackwardCompatibleResponse)),\n});\nexport type SuiObjectData = Infer<typeof SuiObjectData>;\n\n/**\n * Config for fetching object data\n */\nexport const SuiObjectDataOptions = object({\n\t/* Whether to fetch the object type, default to be true */\n\tshowType: nullable(optional(boolean())),\n\t/* Whether to fetch the object content, default to be false */\n\tshowContent: nullable(optional(boolean())),\n\t/* Whether to fetch the object content in BCS bytes, default to be false */\n\tshowBcs: nullable(optional(boolean())),\n\t/* Whether to fetch the object owner, default to be false */\n\tshowOwner: nullable(optional(boolean())),\n\t/* Whether to fetch the previous transaction digest, default to be false */\n\tshowPreviousTransaction: nullable(optional(boolean())),\n\t/* Whether to fetch the storage rebate, default to be false */\n\tshowStorageRebate: nullable(optional(boolean())),\n\t/* Whether to fetch the display metadata, default to be false */\n\tshowDisplay: nullable(optional(boolean())),\n});\nexport type SuiObjectDataOptions = Infer<typeof SuiObjectDataOptions>;\n\nexport const ObjectStatus = union([literal('Exists'), literal('notExists'), literal('Deleted')]);\nexport type ObjectStatus = Infer<typeof ObjectStatus>;\n\nexport const GetOwnedObjectsResponse = array(SuiObjectInfo);\nexport type GetOwnedObjectsResponse = Infer<typeof GetOwnedObjectsResponse>;\n\nexport const SuiObjectResponse = object({\n\tdata: nullable(optional(SuiObjectData)),\n\terror: nullable(optional(SuiObjectResponseError)),\n});\nexport type SuiObjectResponse = Infer<typeof SuiObjectResponse>;\n\nexport type Order = 'ascending' | 'descending';\n\n/* -------------------------------------------------------------------------- */\n/*                              Helper functions                              */\n/* -------------------------------------------------------------------------- */\n\n/* -------------------------- SuiObjectResponse ------------------------- */\n\nexport function getSuiObjectData(resp: SuiObjectResponse): SuiObjectData | null | undefined {\n\treturn resp.data;\n}\n\nexport function getObjectDeletedResponse(resp: SuiObjectResponse): SuiObjectRef | undefined {\n\tif (\n\t\tresp.error &&\n\t\t'object_id' in resp.error &&\n\t\t'version' in resp.error &&\n\t\t'digest' in resp.error\n\t) {\n\t\tconst error = resp.error as SuiObjectResponseError;\n\t\treturn {\n\t\t\tobjectId: error.object_id,\n\t\t\tversion: error.version,\n\t\t\tdigest: error.digest,\n\t\t} as SuiObjectRef;\n\t}\n\n\treturn undefined;\n}\n\nexport function getObjectNotExistsResponse(resp: SuiObjectResponse): string | undefined {\n\tif (\n\t\tresp.error &&\n\t\t'object_id' in resp.error &&\n\t\t!('version' in resp.error) &&\n\t\t!('digest' in resp.error)\n\t) {\n\t\treturn (resp.error as SuiObjectResponseError).object_id as string;\n\t}\n\n\treturn undefined;\n}\n\nexport function getObjectReference(\n\tresp: SuiObjectResponse | OwnedObjectRef,\n): SuiObjectRef | undefined {\n\tif ('reference' in resp) {\n\t\treturn resp.reference;\n\t}\n\tconst exists = getSuiObjectData(resp);\n\tif (exists) {\n\t\treturn {\n\t\t\tobjectId: exists.objectId,\n\t\t\tversion: exists.version,\n\t\t\tdigest: exists.digest,\n\t\t};\n\t}\n\treturn getObjectDeletedResponse(resp);\n}\n\n/* ------------------------------ SuiObjectRef ------------------------------ */\n\nexport function getObjectId(data: SuiObjectResponse | SuiObjectRef | OwnedObjectRef): string {\n\tif ('objectId' in data) {\n\t\treturn data.objectId;\n\t}\n\treturn (\n\t\tgetObjectReference(data)?.objectId ?? getObjectNotExistsResponse(data as SuiObjectResponse)!\n\t);\n}\n\nexport function getObjectVersion(\n\tdata: SuiObjectResponse | SuiObjectRef | SuiObjectData,\n): string | number | bigint | undefined {\n\tif ('version' in data) {\n\t\treturn data.version;\n\t}\n\treturn getObjectReference(data)?.version;\n}\n\n/* -------------------------------- SuiObject ------------------------------- */\n\nexport function isSuiObjectResponse(\n\tresp: SuiObjectResponse | SuiObjectData,\n): resp is SuiObjectResponse {\n\treturn (resp as SuiObjectResponse).data !== undefined;\n}\n\n/**\n * Deriving the object type from the object response\n * @returns 'package' if the object is a package, move object type(e.g., 0x2::coin::Coin<0x2::sui::SUI>)\n * if the object is a move object\n */\nexport function getObjectType(\n\tresp: SuiObjectResponse | SuiObjectData,\n): ObjectType | null | undefined {\n\tconst data = isSuiObjectResponse(resp) ? resp.data : resp;\n\n\tif (!data?.type && 'data' in resp) {\n\t\tif (data?.content?.dataType === 'package') {\n\t\t\treturn 'package';\n\t\t}\n\t\treturn getMoveObjectType(resp);\n\t}\n\treturn data?.type;\n}\n\nexport function getObjectPreviousTransactionDigest(\n\tresp: SuiObjectResponse,\n): string | null | undefined {\n\treturn getSuiObjectData(resp)?.previousTransaction;\n}\n\nexport function getObjectOwner(\n\tresp: SuiObjectResponse | ObjectOwner,\n): ObjectOwner | null | undefined {\n\tif (is(resp, ObjectOwner)) {\n\t\treturn resp;\n\t}\n\treturn getSuiObjectData(resp)?.owner;\n}\n\nexport function getObjectDisplay(resp: SuiObjectResponse): DisplayFieldsResponse {\n\tconst display = getSuiObjectData(resp)?.display;\n\tif (!display) {\n\t\treturn { data: null, error: null };\n\t}\n\tif (is(display, DisplayFieldsResponse)) {\n\t\treturn display;\n\t}\n\treturn {\n\t\tdata: display,\n\t\terror: null,\n\t};\n}\n\nexport function getSharedObjectInitialVersion(\n\tresp: SuiObjectResponse | ObjectOwner,\n): string | null | undefined {\n\tconst owner = getObjectOwner(resp);\n\tif (owner && typeof owner === 'object' && 'Shared' in owner) {\n\t\treturn owner.Shared.initial_shared_version;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function isSharedObject(resp: SuiObjectResponse | ObjectOwner): boolean {\n\tconst owner = getObjectOwner(resp);\n\treturn !!owner && typeof owner === 'object' && 'Shared' in owner;\n}\n\nexport function isImmutableObject(resp: SuiObjectResponse | ObjectOwner): boolean {\n\tconst owner = getObjectOwner(resp);\n\treturn owner === 'Immutable';\n}\n\nexport function getMoveObjectType(resp: SuiObjectResponse): string | undefined {\n\treturn getMoveObject(resp)?.type;\n}\n\nexport function getObjectFields(\n\tresp: SuiObjectResponse | SuiMoveObject | SuiObjectData,\n): ObjectContentFields | undefined {\n\tif ('fields' in resp) {\n\t\treturn resp.fields;\n\t}\n\treturn getMoveObject(resp)?.fields;\n}\n\nexport interface SuiObjectDataWithContent extends SuiObjectData {\n\tcontent: SuiParsedData;\n}\n\nfunction isSuiObjectDataWithContent(data: SuiObjectData): data is SuiObjectDataWithContent {\n\treturn data.content !== undefined;\n}\n\nexport function getMoveObject(data: SuiObjectResponse | SuiObjectData): SuiMoveObject | undefined {\n\tconst suiObject = 'data' in data ? getSuiObjectData(data) : (data as SuiObjectData);\n\n\tif (\n\t\t!suiObject ||\n\t\t!isSuiObjectDataWithContent(suiObject) ||\n\t\tsuiObject.content.dataType !== 'moveObject'\n\t) {\n\t\treturn undefined;\n\t}\n\n\treturn suiObject.content as SuiMoveObject;\n}\n\nexport function hasPublicTransfer(data: SuiObjectResponse | SuiObjectData): boolean {\n\treturn getMoveObject(data)?.hasPublicTransfer ?? false;\n}\n\nexport function getMovePackageContent(\n\tdata: SuiObjectResponse | SuiMovePackage,\n): MovePackageContent | undefined {\n\tif ('disassembled' in data) {\n\t\treturn data.disassembled;\n\t}\n\tconst suiObject = getSuiObjectData(data);\n\tif (suiObject?.content?.dataType !== 'package') {\n\t\treturn undefined;\n\t}\n\treturn (suiObject.content as SuiMovePackage).disassembled;\n}\n\nexport const CheckpointedObjectId = object({\n\tobjectId: string(),\n\tatCheckpoint: optional(number()),\n});\nexport type CheckpointedObjectId = Infer<typeof CheckpointedObjectId>;\n\nexport const PaginatedObjectsResponse = object({\n\tdata: array(SuiObjectResponse),\n\tnextCursor: optional(nullable(string())),\n\thasNextPage: boolean(),\n});\nexport type PaginatedObjectsResponse = Infer<typeof PaginatedObjectsResponse>;\n\n// mirrors sui_json_rpc_types:: SuiObjectDataFilter\nexport type SuiObjectDataFilter =\n\t| { MatchAll: SuiObjectDataFilter[] }\n\t| { MatchAny: SuiObjectDataFilter[] }\n\t| { MatchNone: SuiObjectDataFilter[] }\n\t| { Package: string }\n\t| { MoveModule: { package: string; module: string } }\n\t| { StructType: string }\n\t| { AddressOwner: string }\n\t| { ObjectOwner: string }\n\t| { ObjectId: string }\n\t| { ObjectIds: string[] }\n\t| { Version: string };\n\nexport type SuiObjectResponseQuery = {\n\tfilter?: SuiObjectDataFilter;\n\toptions?: SuiObjectDataOptions;\n};\n\nexport const ObjectRead = union([\n\tobject({\n\t\tdetails: SuiObjectData,\n\t\tstatus: literal('VersionFound'),\n\t}),\n\tobject({\n\t\tdetails: string(),\n\t\tstatus: literal('ObjectNotExists'),\n\t}),\n\tobject({\n\t\tdetails: SuiObjectRef,\n\t\tstatus: literal('ObjectDeleted'),\n\t}),\n\tobject({\n\t\tdetails: tuple([string(), number()]),\n\t\tstatus: literal('VersionNotFound'),\n\t}),\n\tobject({\n\t\tdetails: object({\n\t\t\tasked_version: number(),\n\t\t\tlatest_version: number(),\n\t\t\tobject_id: string(),\n\t\t}),\n\t\tstatus: literal('VersionTooHigh'),\n\t}),\n]);\nexport type ObjectRead = Infer<typeof ObjectRead>;\n"],
  "mappings": "AAIA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,mBAAmB;AAErB,MAAM,aAAa,MAAM,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,CAAC;AAGvD,MAAM,eAAe,OAAO;AAAA;AAAA,EAElC,QAAQ,OAAO;AAAA;AAAA,EAEf,UAAU,OAAO;AAAA;AAAA,EAEjB,SAAS,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;AAC9C,CAAC;AAGM,MAAM,iBAAiB,OAAO;AAAA,EACpC,OAAO;AAAA,EACP,WAAW;AACZ,CAAC;AAEM,MAAM,uCAAuC,OAAO;AAAA,EAC1D,UAAU,OAAO;AAAA,EACjB,gBAAgB,OAAO;AACxB,CAAC;AAEM,MAAM,aAAa,OAAO;AAAA,EAChC,SAAS,MAAM,YAAY;AAAA;AAAA,EAE3B,OAAO,OAAO;AAAA,EACd,OAAO,OAAO;AAAA,EACd,QAAQ,OAAO;AAChB,CAAC;AAGM,MAAM,gBAAgB;AAAA,EAC5B;AAAA,EACA,OAAO;AAAA,IACN,MAAM,OAAO;AAAA,IACb,OAAO;AAAA,IACP,qBAAqB,OAAO;AAAA,EAC7B,CAAC;AACF;AAGO,MAAM,sBAAsB,OAAO,OAAO,GAAG,IAAI,CAAC;AAGlD,MAAM,qBAAqB,OAAO,OAAO,GAAG,QAAQ,CAAC;AAGrD,MAAM,gBAAgB,OAAO;AAAA;AAAA,EAEnC,MAAM,OAAO;AAAA;AAAA,EAEb,QAAQ;AAAA,EACR,mBAAmB,QAAQ;AAC5B,CAAC;AAGM,MAAM,iBAAiB,OAAO;AAAA;AAAA,EAEpC,cAAc;AACf,CAAC;AAGM,MAAM,gBAAgB,MAAM;AAAA,EAClC,OAAO,eAAe,OAAO,EAAE,UAAU,QAAQ,YAAY,EAAE,CAAC,CAAC;AAAA,EACjE,OAAO,gBAAgB,OAAO,EAAE,UAAU,QAAQ,SAAS,EAAE,CAAC,CAAC;AAChE,CAAC;AAGM,MAAM,mBAAmB,OAAO;AAAA;AAAA,EAEtC,MAAM,OAAO;AAAA,EACb,mBAAmB,QAAQ;AAAA,EAC3B,SAAS,OAAO;AAAA,EAChB,UAAU,OAAO;AAClB,CAAC;AAGM,MAAM,oBAAoB,OAAO;AAAA,EACvC,IAAI,OAAO;AAAA;AAAA,EAEX,WAAW,OAAO,OAAO,GAAG,OAAO,CAAC;AACrC,CAAC;AAIM,MAAM,aAAa,MAAM;AAAA,EAC/B,OAAO,kBAAkB,OAAO,EAAE,UAAU,QAAQ,YAAY,EAAE,CAAC,CAAC;AAAA,EACpE,OAAO,mBAAmB,OAAO,EAAE,UAAU,QAAQ,SAAS,EAAE,CAAC,CAAC;AACnE,CAAC;AAGM,MAAM,eAAe;AAErB,MAAM,eAAe,OAAO,GAAU;AAEtC,MAAM,yBAAyB,OAAO;AAAA,EAC5C,MAAM,OAAO;AAAA,EACb,OAAO,SAAS,OAAO,CAAC;AAAA,EACxB,WAAW,SAAS,OAAO,CAAC;AAAA,EAC5B,kBAAkB,SAAS,OAAO,CAAC;AAAA,EACnC,SAAS,SAAS,OAAO,CAAC;AAAA,EAC1B,QAAQ,SAAS,OAAO,CAAC;AAC1B,CAAC;AAEM,MAAM,wBAAwB,OAAO;AAAA,EAC3C,MAAM,SAAS,SAAS,OAAO,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;AAAA,EACnD,OAAO,SAAS,SAAS,sBAAsB,CAAC;AACjD,CAAC;AAGM,MAAM,0CAA0C,MAAM;AAAA,EAC5D;AAAA,EACA,SAAS,OAAO,OAAO,GAAG,OAAO,CAAC,CAAC;AACpC,CAAC;AAKM,MAAM,gBAAgB,OAAO;AAAA,EACnC,UAAU,OAAO;AAAA,EACjB,SAAS,OAAO;AAAA,EAChB,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA,EAIf,MAAM,SAAS,SAAS,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,EAIjC,SAAS,SAAS,SAAS,aAAa,CAAC;AAAA;AAAA;AAAA;AAAA,EAIzC,KAAK,SAAS,SAAS,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA,EAIlC,OAAO,SAAS,SAAS,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrC,qBAAqB,SAAS,SAAS,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhD,eAAe,SAAS,SAAS,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1C,SAAS,SAAS,SAAS,uCAAuC,CAAC;AACpE,CAAC;AAMM,MAAM,uBAAuB,OAAO;AAAA;AAAA,EAE1C,UAAU,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAEtC,aAAa,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAEzC,SAAS,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAErC,WAAW,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAEvC,yBAAyB,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAErD,mBAAmB,SAAS,SAAS,QAAQ,CAAC,CAAC;AAAA;AAAA,EAE/C,aAAa,SAAS,SAAS,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAGM,MAAM,eAAe,MAAM,CAAC,QAAQ,QAAQ,GAAG,QAAQ,WAAW,GAAG,QAAQ,SAAS,CAAC,CAAC;AAGxF,MAAM,0BAA0B,MAAM,aAAa;AAGnD,MAAM,oBAAoB,OAAO;AAAA,EACvC,MAAM,SAAS,SAAS,aAAa,CAAC;AAAA,EACtC,OAAO,SAAS,SAAS,sBAAsB,CAAC;AACjD,CAAC;AAWM,SAAS,iBAAiB,MAA2D;AAC3F,SAAO,KAAK;AACb;AAEO,SAAS,yBAAyB,MAAmD;AAC3F,MACC,KAAK,SACL,eAAe,KAAK,SACpB,aAAa,KAAK,SAClB,YAAY,KAAK,OAChB;AACD,UAAM,QAAQ,KAAK;AACnB,WAAO;AAAA,MACN,UAAU,MAAM;AAAA,MAChB,SAAS,MAAM;AAAA,MACf,QAAQ,MAAM;AAAA,IACf;AAAA,EACD;AAEA,SAAO;AACR;AAEO,SAAS,2BAA2B,MAA6C;AACvF,MACC,KAAK,SACL,eAAe,KAAK,SACpB,EAAE,aAAa,KAAK,UACpB,EAAE,YAAY,KAAK,QAClB;AACD,WAAQ,KAAK,MAAiC;AAAA,EAC/C;AAEA,SAAO;AACR;AAEO,SAAS,mBACf,MAC2B;AAC3B,MAAI,eAAe,MAAM;AACxB,WAAO,KAAK;AAAA,EACb;AACA,QAAM,SAAS,iBAAiB,IAAI;AACpC,MAAI,QAAQ;AACX,WAAO;AAAA,MACN,UAAU,OAAO;AAAA,MACjB,SAAS,OAAO;AAAA,MAChB,QAAQ,OAAO;AAAA,IAChB;AAAA,EACD;AACA,SAAO,yBAAyB,IAAI;AACrC;AAIO,SAAS,YAAY,MAAiE;AAC5F,MAAI,cAAc,MAAM;AACvB,WAAO,KAAK;AAAA,EACb;AACA,SACC,mBAAmB,IAAI,GAAG,YAAY,2BAA2B,IAAyB;AAE5F;AAEO,SAAS,iBACf,MACuC;AACvC,MAAI,aAAa,MAAM;AACtB,WAAO,KAAK;AAAA,EACb;AACA,SAAO,mBAAmB,IAAI,GAAG;AAClC;AAIO,SAAS,oBACf,MAC4B;AAC5B,SAAQ,KAA2B,SAAS;AAC7C;AAOO,SAAS,cACf,MACgC;AAChC,QAAM,OAAO,oBAAoB,IAAI,IAAI,KAAK,OAAO;AAErD,MAAI,CAAC,MAAM,QAAQ,UAAU,MAAM;AAClC,QAAI,MAAM,SAAS,aAAa,WAAW;AAC1C,aAAO;AAAA,IACR;AACA,WAAO,kBAAkB,IAAI;AAAA,EAC9B;AACA,SAAO,MAAM;AACd;AAEO,SAAS,mCACf,MAC4B;AAC5B,SAAO,iBAAiB,IAAI,GAAG;AAChC;AAEO,SAAS,eACf,MACiC;AACjC,MAAI,GAAG,MAAM,WAAW,GAAG;AAC1B,WAAO;AAAA,EACR;AACA,SAAO,iBAAiB,IAAI,GAAG;AAChC;AAEO,SAAS,iBAAiB,MAAgD;AAChF,QAAM,UAAU,iBAAiB,IAAI,GAAG;AACxC,MAAI,CAAC,SAAS;AACb,WAAO,EAAE,MAAM,MAAM,OAAO,KAAK;AAAA,EAClC;AACA,MAAI,GAAG,SAAS,qBAAqB,GAAG;AACvC,WAAO;AAAA,EACR;AACA,SAAO;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,EACR;AACD;AAEO,SAAS,8BACf,MAC4B;AAC5B,QAAM,QAAQ,eAAe,IAAI;AACjC,MAAI,SAAS,OAAO,UAAU,YAAY,YAAY,OAAO;AAC5D,WAAO,MAAM,OAAO;AAAA,EACrB,OAAO;AACN,WAAO;AAAA,EACR;AACD;AAEO,SAAS,eAAe,MAAgD;AAC9E,QAAM,QAAQ,eAAe,IAAI;AACjC,SAAO,CAAC,CAAC,SAAS,OAAO,UAAU,YAAY,YAAY;AAC5D;AAEO,SAAS,kBAAkB,MAAgD;AACjF,QAAM,QAAQ,eAAe,IAAI;AACjC,SAAO,UAAU;AAClB;AAEO,SAAS,kBAAkB,MAA6C;AAC9E,SAAO,cAAc,IAAI,GAAG;AAC7B;AAEO,SAAS,gBACf,MACkC;AAClC,MAAI,YAAY,MAAM;AACrB,WAAO,KAAK;AAAA,EACb;AACA,SAAO,cAAc,IAAI,GAAG;AAC7B;AAMA,SAAS,2BAA2B,MAAuD;AAC1F,SAAO,KAAK,YAAY;AACzB;AAEO,SAAS,cAAc,MAAoE;AACjG,QAAM,YAAY,UAAU,OAAO,iBAAiB,IAAI,IAAK;AAE7D,MACC,CAAC,aACD,CAAC,2BAA2B,SAAS,KACrC,UAAU,QAAQ,aAAa,cAC9B;AACD,WAAO;AAAA,EACR;AAEA,SAAO,UAAU;AAClB;AAEO,SAAS,kBAAkB,MAAkD;AACnF,SAAO,cAAc,IAAI,GAAG,qBAAqB;AAClD;AAEO,SAAS,sBACf,MACiC;AACjC,MAAI,kBAAkB,MAAM;AAC3B,WAAO,KAAK;AAAA,EACb;AACA,QAAM,YAAY,iBAAiB,IAAI;AACvC,MAAI,WAAW,SAAS,aAAa,WAAW;AAC/C,WAAO;AAAA,EACR;AACA,SAAQ,UAAU,QAA2B;AAC9C;AAEO,MAAM,uBAAuB,OAAO;AAAA,EAC1C,UAAU,OAAO;AAAA,EACjB,cAAc,SAAS,OAAO,CAAC;AAChC,CAAC;AAGM,MAAM,2BAA2B,OAAO;AAAA,EAC9C,MAAM,MAAM,iBAAiB;AAAA,EAC7B,YAAY,SAAS,SAAS,OAAO,CAAC,CAAC;AAAA,EACvC,aAAa,QAAQ;AACtB,CAAC;AAsBM,MAAM,aAAa,MAAM;AAAA,EAC/B,OAAO;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,QAAQ,cAAc;AAAA,EAC/B,CAAC;AAAA,EACD,OAAO;AAAA,IACN,SAAS,OAAO;AAAA,IAChB,QAAQ,QAAQ,iBAAiB;AAAA,EAClC,CAAC;AAAA,EACD,OAAO;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,QAAQ,eAAe;AAAA,EAChC,CAAC;AAAA,EACD,OAAO;AAAA,IACN,SAAS,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;AAAA,IACnC,QAAQ,QAAQ,iBAAiB;AAAA,EAClC,CAAC;AAAA,EACD,OAAO;AAAA,IACN,SAAS,OAAO;AAAA,MACf,eAAe,OAAO;AAAA,MACtB,gBAAgB,OAAO;AAAA,MACvB,WAAW,OAAO;AAAA,IACnB,CAAC;AAAA,IACD,QAAQ,QAAQ,gBAAgB;AAAA,EACjC,CAAC;AACF,CAAC;",
  "names": []
}
